# -*- coding: utf-8 -*-
"""LL.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m6edR-Mi51nvx0g1aD-lhC1O5cJN28O-
"""

class Node:
  def __init__(self, data):
    self.data=data
    self.next=None

class LinkedList:
  def __init__(self):
    self.head=None
  def printll(self):
    temp=self.head
    while temp:
      print(temp.data,end='')
      temp=temp.next
  def push(self, new_data):
    new_node=Node(new_data)
    new_node.next=self.head
    self.head=new_node
  def reversell(self,head):
    if head==None or head.next==None:
      return head
    rest=self.reversell(head.next)
    head.next.next=head
    head.next=None

    return rest
  def reversei(self):
    prev=None
    curr=self.head
    while curr is not None:
      next=curr.next
      curr.next=prev
      prev=curr
      curr=next
    self.head=prev

  
llist=LinkedList()
llist.push(1)
llist.push(2)
llist.push(3)
llist.push(4)
llist.printll()
#llist.head=llist.reversell(llist.head)
llist.reversei()
print()
llist.printll()

